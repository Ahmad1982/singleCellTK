% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importSeqc.R
\name{importSeqc}
\alias{importSeqc}
\title{Construct SCE object from seqc output}
\usage{
importSeqc(
  SeqcDirs = NULL,
  samples = NULL,
  prefix = NULL,
  gzipped = FALSE,
  class = "DelayedArray",
  cbNotFirstCol = TRUE,
  feNotFirstCol = TRUE,
  combinedSample = TRUE
)
}
\arguments{
\item{SeqcDirs}{The root directories where seqc was run. These
folders should contain sample specific folders. Default \code{NULL},
meaning the paths for each sample will be specified in \emph{samples}
argument.}

\item{samples}{Default \code{NULL}. Can be one of
\itemize{
  \item \code{NULL}. All samples within \emph{SeqcDirs} will be
   imported. The order of samples will be first determined by the order of
   \emph{SeqcDirs} and then by \link[base]{list.files}. This is only
   for the case where \emph{SeqcDirs} is specified.
  \item A vector containing sample names to import.
   These names are the same as the folder names under \emph{SeqcDirs}.
   This is only for the case where \emph{SeqcDirs} is specified.
  \item A vector of folder paths for the samples to import. This is only for
   the case where \emph{SeqcDirs} is \code{NULL}.
}
The cells in the final SCE object will be ordered in the same order of
samples.}

\item{prefix}{A vector containing the prefix of file names within each sample directory. 
It cannot be null and the vector should have the same length as \emph{samples}.}

\item{gzipped}{Boolean. \code{TRUE} if the seqc output files
(sparse_counts_barcode.csv, sparse_counts_genes.csv, and sparse_molecule_counts.mtx) 
were gzip compressed. \code{FALSE} otherwise. Default seqc outputs are not gzipped.
Default \code{FALSE}.}

\item{class}{Character. The class of the expression matrix stored in the SCE
object. Can be one of "DelayedArray" (as returned by
\link[DelayedArray]{DelayedArray} function), "Matrix" (as returned by
\link[Matrix]{readMM} function), or "matrix" (as returned by
\link[base]{matrix} function). Default "DelayedArray".}

\item{cbNotFirstCol}{Boolean. \code{TRUE} if first column of sparse_counts_barcode.csv
is row index and it will be removed. \code{FALSE} the first column will be kept.}

\item{feNotFirstCol}{Boolean. \code{TRUE} if first column of sparse_counts_genes.csv
is row index and it will be removed. \code{FALSE} the first column will be kept.}

\item{combinedSample}{Boolean. If \code{TRUE}, \code{importSeqc} returns a 
\code{SingleCellExperiment} object containing the combined count matrix, feature annotations 
and the cell annotations. If \code{FALSE}, \code{importSeqc} returns a list containing multiple 
\code{SingleCellExperiment} objects. Each \code{SingleCellExperiment} contains count matrix
, feature anotations and cell annotations for each sample.}
}
\value{
A \code{SingleCellExperiment} object containing the combined count
 matrix, the feature annotations, and the cell annotation.
}
\description{
Read the filtered barcodes, features, and matrices for all
 samples from (preferably a single run of) seqc output. Import and
 combine them as one big \link[SingleCellExperiment]{SingleCellExperiment} object.
}
\details{
\code{importSeqc} imports output from seqc.
The default sparse_counts_barcode.csv or sparse_counts_genes.csv from seqc output
contains two columns. The first column is row index and the second column is cell-barcode 
or gene symbol. \code{importSeqc} will remove first column. Alternatively, user can call 
\code{cbNotFirstCol} or \code{feNotFirstCol} as FALSE to keep the first column
of these files.  
When \code{combinedSample} is TRUE, \code{importSeqc} will combined count matrix
with genes detected in at least one sample.
}
\examples{
# Example #1
# The following filtered feature, cell, and matrix files were downloaded from
# https://support.10xgenomics.com/single-cell-gene-expression/datasets/
# 3.0.0/pbmc_1k_v3
# The top 50 hg38 genes are included in this example.
# Only the top 50 cells are included.
sce <- importSeqc(
    SeqcDirs = system.file("extdata", package = "singleCellTK"),
    samples = "pbmc_1k_50x50", 
    prefix = 'pbmc_1k', 
    combinedSample = FALSE)
}
