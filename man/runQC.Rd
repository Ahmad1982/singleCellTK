% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runQC.R
\name{runCellQC}
\alias{runCellQC}
\title{Perform comprehensive single cell QC}
\usage{
runCellQC(sce, algorithms = c("doubletCells", "DecontX"),
  sampleColname = "sample", assayType = "counts", ...)
}
\arguments{
\item{sce}{A \link[SingleCellExperiment]{SingleCellExperiment} object.}

\item{algorithms}{Character vector. Specify which QC algorithms to run.
Available options are "decontX" and "doubletCells".}

\item{sample}{Character vector. Indicates which sample each cell belongs to.
Algorithms will be run on cells from each sample separately.}

\item{assayName}{A string specifying which assay contains the count
matrix for cells.}
}
\value{
SingleCellExperiment object containing the outputs of the
 specified algorithms in the \link[SummarizedExperiment]{colData}
of \code{sce}.
}
\description{
A wrapper function to run several QC algorithms on a SingleCellExperiment
object containing cells after empty droplets have been removed.
}
\details{
\code{runQC} by default runs all available QC algorithms
 (\link[DropletUtils]{emptyDrops}, \link[scran]{doubletCells}).
 \code{runQCFilteredCells} runs QC
 algorithm (\link[scran]{doubletCells}) on \code{sce} containing
 filtered cells.
 \code{runQCAllDroplets}, runs QC
 algorithm (\link[DropletUtils]{emptyDrops}) on \code{sce} containing
 unfiltered cells.
}
\examples{
data(emptyDropsSceExample, package = "singleCellTK")
sce <- runQC(emptyDropsSceExample,
    algorithms = c("decontX", "doubletCells"))
data(emptyDropsSceExample, package = "singleCellTK")
sce <- runQCFilteredCells(emptyDropsSceExample)
}
